Gurobi Optimizer version 9.1.2 build v9.1.2rc0 (linux64)
Thread count: 24 physical cores, 24 logical processors, using up to 1 threads
Optimize a model with 512 rows, 12563 columns and 33180 nonzeros
Model fingerprint: 0x1c63fc90
Variable types: 0 continuous, 12563 integer (12563 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 3e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 1e+00]
Found heuristic solution: objective 64.5000000
Presolve removed 449 rows and 12156 columns
Presolve time: 0.01s
Presolved: 63 rows, 407 columns, 823 nonzeros
Found heuristic solution: objective 75.5156250
Variable types: 0 continuous, 407 integer (407 binary)

Root relaxation: objective 8.843750e+01, 136 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

H    0     0                      88.4375000  862.01562   875%     -    0s
     0     0          -    0        88.43750   88.43750  0.00%     -    0s

Explored 0 nodes (209 simplex iterations) in 0.02 seconds
Thread count was 1 (of 24 available processors)

Solution count 3: 88.4375 75.5156 64.5 

Optimal solution found (tolerance 1.00e-04)
Best objective 8.843750000000e+01, best bound 8.843750000000e+01, gap 0.0000%

User-callback calls 60, time in user-callback 0.00 sec
ERROR: LoadError: KeyError: key "Bellman-Ford" not found
Stacktrace:
 [1] getindex at ./dict.jl:477 [inlined]
 [2] getindex(::TimerOutput, ::String) at /home/aarslan/.julia/packages/TimerOutputs/5tW2E/src/TimerOutput.jl:318
 [3] top-level scope at /home/aarslan/KidneyExchange.jl/KEPTestBPPICEF.jl:45
 [4] include at ./boot.jl:328 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1094
 [6] include(::Module, ::String) at ./Base.jl:31
 [7] exec_options(::Base.JLOptions) at ./client.jl:295
 [8] _start() at ./client.jl:464
in expression starting at /home/aarslan/KidneyExchange.jl/KEPTestBPPICEF.jl:45

********************************************************************************
 Solve heterogeneous/heterogeneous_128_0_1 with (K,L) = (3,4) using branch-and-price
 - master model uses PIEF = true 
 - time limit is 7200.0 seconds
********************************************************************************


----------------------------------------------------------
 Parse the input file
----------------------------------------------------------


----------------------------------------------------------
 Preprocessing: compute the graph copies
----------------------------------------------------------


----------------------------------------------------------
 Solve with branch-and-price
----------------------------------------------------------

Initialize column pool with 2-cycles when using PIEF
- number of initial columns: 497

Processing node 1


Iteration 1:
- current master value: 76.0
- nb of cycles added = 30

Iteration 2:
- current master value: 87.0
- nb of cycles added = 3

Iteration 3:
- current master value: 88.0
- nb of cycles added = 0
- no positive column was added, switch to optimality search

Iteration 4:
- current master value: 88.0
- nb of cycles added = 0

Node relaxation is solved to optimality
- node upper bound is 88.0, tree lower bound is -Inf

 Search for a feasible solution at node 1
- number of columns in master IP: 530


New incumbent found with value 88.0 found by solving the IP with every column of the pool
After processing root node: LB = 88.0, UB = 88.0
The node is either infeasible or pruned by bound
LB = 88.0, UB = 88.0

----------------------------------------------------------
 The execution of the branch-and-price is complete
- the solution is optimal
- best solution found: value 88.0 with gap 0.0 %
----------------------------------------------------------

Numbers of cycles per cycle length
- k = 2: 29 cycles
- k = 3: 10 cycles
In total, 88 pairs are covered by cycles

The computed cost of the solution is 88.0
 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
                                     Time                    Allocations      
                            â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€   â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      Tot / % measured:          28.7s /  96.8%           2.16GiB /  99.2%    

 Section            ncalls     time    %tot     avg     alloc    %tot      avg
 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 B&P                     1    25.9s   93.4%   25.9s   2.03GiB   95.0%  2.03GiB
   Process_Node          1    10.0s   36.0%   10.0s    842MiB   38.4%   842MiB
     opt_master          3    5.95s   21.4%   1.98s    571MiB   26.1%   190MiB
     Bellman-Ford      143    1.13s    4.1%  7.87ms   59.4MiB    2.7%   425KiB
     IP_master           1    360ms    1.3%   360ms   29.4MiB    1.3%  29.4MiB
 Parser                  1    1.05s    3.8%   1.05s   50.5MiB    2.3%  50.5MiB
 Preprocessing           1    784ms    2.8%   784ms   60.0MiB    2.7%  60.0MiB
 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

********************************************************************************
 Solve preflib/MD-00001-00000297 with (K,L) = (4,6) using branch-and-price
 - master model uses PIEF = true 
 - time limit is 7200.0 seconds
********************************************************************************


----------------------------------------------------------
 Parse the input file
----------------------------------------------------------


----------------------------------------------------------
 Preprocessing: compute the graph copies
----------------------------------------------------------


----------------------------------------------------------
 Solve with branch-and-price
----------------------------------------------------------

Initialize column pool with 2-cycles when using PIEF
- number of initial columns: 10604

Processing node 1


Iteration 1:
After processing root node: LB = -Inf, UB = Inf
- the problem was not solved at root node
    . deactivate column-disjoint CG and tabu list
    . delete half the columns and restart solving to generate new columns
Processing node 1


Iteration 1:
The node is either infeasible or pruned by bound
LB = -Inf, UB = Inf
[35m The time limit is exceeded [00m

----------------------------------------------------------
 The execution of the branch-and-price is complete
- the solution is optimal
- best solution found: value -Inf with gap NaN %
----------------------------------------------------------

Numbers of cycles per cycle length
In total, 0 pairs are covered by cycles

Numbers of chains per chain length
In total, 0 pairs are covered by chains

The computed cost of the solution is 0.0
 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
                                   Time                    Allocations      
                          â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€   â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
     Tot / % measured:        14650s / 100.0%           26.0GiB / 100.0%    

 Section          ncalls     time    %tot     avg     alloc    %tot      avg
 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 B&P                   1   14646s  100.0%  14646s   25.2GiB   97.1%  25.2GiB
   Process_Node        2   14498s   99.0%   7249s   5.53GiB   21.3%  2.77GiB
     opt_master        2   14497s   99.0%   7248s   5.46GiB   21.0%  2.73GiB
 Parser                1    2.64s    0.0%   2.64s    500MiB    1.9%   500MiB
 Preprocessing         1    1.55s    0.0%   1.55s    270MiB    1.0%   270MiB
 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Command exited with non-zero status 1
	Command being timed: "sh /home/aarslan//jobs-running/1600550/miriel084.0/BP_4_6_pref_297"
	User time (seconds): 14670.91
	System time (seconds): 141.90
	Percent of CPU this job got: 100%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 4:05:28
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 9036356
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 80632595
	Voluntary context switches: 2899367
	Involuntary context switches: 27419
	Swaps: 0
	File system inputs: 8
	File system outputs: 32
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 1
Sat Jul 23 04:17:36 2022 -- miriel084.0/1600550 Status error code = 256
